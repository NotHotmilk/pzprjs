/*! @license pzpr.js v1375cc80 (c) 2009-2025 sabo2, MIT license
 *   https://github.com/sabo2/pzprv3 */
!function(e,s){"object"==typeof module&&module.exports?module.exports=[e,s]:pzpr.classmgr.makeCustom(e,s)}(["soulmates"],{MouseEvent:{inputModes:{edit:["number","clear"],play:["number","numexist","numblank","clear"]},autoedit_func:"qnum",autoplay_func:"qnum"},KeyEvent:{enablemake:!0,enableplay:!0,keyinput:function(e){this.key_sukoro(e)},key_sukoro:function(e){var s;this.puzzle.playmode&&(s=this.cursor.getc(),"q"===e||"a"===e||"z"===e?e=1===s.qsub?"1":"s1":"w"===e||"s"===e||"x"===e?e=2===s.qsub?"2":"s2":"e"===e||"d"===e||"c"===e||"-"===e?e=" ":"1"===e&&1===s.anum?e="s1":"2"===e&&2===s.anum&&(e="s2")),this.key_inputqnum(e)}},Cell:{numberWithMB:!0,maxnum:function(){return this.board.cols*this.board.rows},getViewClist:function(){for(var e=this.bx,s=this.by,t=new this.klass.CellList,i=1;i<=4;i++)for(var r=new this.klass.Address(e,s);;){r.movedir(i,2);var l=r.getc();if(l.isnull||!l.noNum()||1===l.qsub)break;t.add(l)}return t}},AreaNumberGraph:{enabled:!0},Graphic:{paint:function(){this.drawBGCells(),this.drawGrid(),this.drawMBs(),this.drawAnsNumbers(),this.drawQuesNumbers(),this.drawDotCells(),this.drawSolverAnsNumbers(),this.drawChassis(),this.drawCursor()},drawDotCells:function(){for(var e=this.vinc("cell_dot","auto",!0),s=Math.max(.06*this.cw,2),t=this.range.cells,i=0;i<t.length;i++){var r=t[i];e.vid="c_dot_"+r.id,2===r.qsub||r.isDotBySolver()?(r.trial?e.fillStyle=this.trialcolor:e.fillStyle=this.getColorSolverAware(2===r.qsub,1===r.qsubBySolver),e.fillCircle(r.bx*this.bw,r.by*this.bh,s)):e.vhide()}},drawMBs:function(){for(var e=this.vinc("cell_mb","auto",!0),s=(e.lineWidth=1,.35*this.cw),t=this.range.cells,i=0;i<t.length;i++){var r,l,n=t[i];0<n.qsub&&(r=n.bx*this.bw,l=n.by*this.bh,e.strokeStyle=n.trial?"rgb(192, 192, 192)":this.mbcolor),e.vid="c_MB1_"+n.id,1===n.qsub?e.strokeCircle(r,l,s):e.vhide()}}},Encode:{decodePzpr:function(e){this.decodeNumber16()},encodePzpr:function(e){this.encodeNumber16()}},FileIO:{decodeData:function(){this.decodeCellQnum(),this.decodeCellAnumsub()},encodeData:function(){this.encodeCellQnum(),this.encodeCellAnumsub()}},AnsCheck:{checklist:[]}});